nohup: ignoring input
Start training.
--------------- The 1-th fold as the validation set... ---------------
Cascade_Binary: Preprocessing dataset...
Data length:  11314
Epoch id: 1, Training steps: 250, Loss: 2.749223
Epoch id: 1, Training steps: 500, Loss: 2.134811
Epoch id: 1, Training steps: 750, Loss: 1.900847
Epoch id: 1, Training steps: 1000, Loss: 1.704772
Epoch id: 1, Training steps: 1250, Loss: 1.482911
Epoch id: 2, Training steps: 250, Loss: 2.016636
Epoch id: 2, Training steps: 500, Loss: 1.066078
Epoch id: 2, Training steps: 750, Loss: 0.988778
Epoch id: 2, Training steps: 1000, Loss: 0.929801
Epoch id: 2, Training steps: 1250, Loss: 0.888544
Epoch id: 3, Training steps: 250, Loss: 1.399156
Epoch id: 3, Training steps: 500, Loss: 0.808565
Epoch id: 3, Training steps: 750, Loss: 0.805606
Epoch id: 3, Training steps: 1000, Loss: 0.789191
Epoch id: 3, Training steps: 1250, Loss: 0.774369
Epoch id: 4, Training steps: 250, Loss: 1.254120
Epoch id: 4, Training steps: 500, Loss: 0.740739
Epoch id: 4, Training steps: 750, Loss: 0.737616
Epoch id: 4, Training steps: 1000, Loss: 0.734352
Epoch id: 4, Training steps: 1250, Loss: 0.736966
Epoch id: 5, Training steps: 250, Loss: 1.195398
Epoch id: 5, Training steps: 500, Loss: 0.720678
Epoch id: 5, Training steps: 750, Loss: 0.714990
Epoch id: 5, Training steps: 1000, Loss: 0.709347
Epoch id: 5, Training steps: 1250, Loss: 0.722158
Epoch id: 6, Training steps: 250, Loss: 1.174827
Epoch id: 6, Training steps: 500, Loss: 0.708634
Epoch id: 6, Training steps: 750, Loss: 0.689043
Epoch id: 6, Training steps: 1000, Loss: 0.696589
Epoch id: 6, Training steps: 1250, Loss: 0.700850
Epoch id: 7, Training steps: 250, Loss: 1.136950
Epoch id: 7, Training steps: 500, Loss: 0.684112
Epoch id: 7, Training steps: 750, Loss: 0.679687
Epoch id: 7, Training steps: 1000, Loss: 0.691924
Epoch id: 7, Training steps: 1250, Loss: 0.696272
Epoch id: 8, Training steps: 250, Loss: 1.121772
Epoch id: 8, Training steps: 500, Loss: 0.681065
Epoch id: 8, Training steps: 750, Loss: 0.682729
Epoch id: 8, Training steps: 1000, Loss: 0.677980
Epoch id: 8, Training steps: 1250, Loss: 0.674516
Epoch id: 9, Training steps: 250, Loss: 1.115020
Epoch id: 9, Training steps: 500, Loss: 0.669356
Epoch id: 9, Training steps: 750, Loss: 0.666918
Epoch id: 9, Training steps: 1000, Loss: 0.662839
Epoch id: 9, Training steps: 1250, Loss: 0.664591
Epoch id: 10, Training steps: 250, Loss: 1.093388
Epoch id: 10, Training steps: 500, Loss: 0.655624
Epoch id: 10, Training steps: 750, Loss: 0.637691
Epoch id: 10, Training steps: 1000, Loss: 0.650717
Epoch id: 10, Training steps: 1250, Loss: 0.642240
Epoch id: 11, Training steps: 250, Loss: 1.040634
Epoch id: 11, Training steps: 500, Loss: 0.612449
Epoch id: 11, Training steps: 750, Loss: 0.619025
Epoch id: 11, Training steps: 1000, Loss: 0.608341
Epoch id: 11, Training steps: 1250, Loss: 0.620844
Epoch id: 12, Training steps: 250, Loss: 1.003628
Epoch id: 12, Training steps: 500, Loss: 0.589378
Epoch id: 12, Training steps: 750, Loss: 0.579766
Epoch id: 12, Training steps: 1000, Loss: 0.583313
Epoch id: 12, Training steps: 1250, Loss: 0.592303
Epoch id: 13, Training steps: 250, Loss: 0.956226
Epoch id: 13, Training steps: 500, Loss: 0.573901
Epoch id: 13, Training steps: 750, Loss: 0.563388
Epoch id: 13, Training steps: 1000, Loss: 0.570197
Epoch id: 13, Training steps: 1250, Loss: 0.588759
Epoch id: 14, Training steps: 250, Loss: 0.934520
Epoch id: 14, Training steps: 500, Loss: 0.554286
Epoch id: 14, Training steps: 750, Loss: 0.557743
Epoch id: 14, Training steps: 1000, Loss: 0.559479
Epoch id: 14, Training steps: 1250, Loss: 0.561423
Epoch id: 15, Training steps: 250, Loss: 0.916697
Epoch id: 15, Training steps: 500, Loss: 0.539808
Epoch id: 15, Training steps: 750, Loss: 0.537537
Traceback (most recent call last):
  File "train.py", line 324, in <module>
    main()
  File "train.py", line 321, in main
    train_kfold(args)
  File "train.py", line 281, in train_kfold
    loss = model.get_loss(feats, device_batch, epoch)
  File "/work/ssd.user/lxk/event_extraction/event_extraction_codes/models/cascade_model.py", line 169, in get_loss
    gold_mask[negative_rand_sample_array[0:negative_samples_max_num]] = torch.ones(negative_samples_max_num).to(self.device)
RuntimeError: shape mismatch: value tensor of shape [260] cannot be broadcast to indexing result of shape [256]
